// Generated by CoffeeScript 1.10.0
(function() {
  var module;

  module = angular.module('atns.ng.pagination', ['ngRoute', 'partials/pagination.html']);

  module.factory('pagination', function($location, $routeParams, paginationConfig) {
    return {
      setPage: function(paramName, callback) {
        return function(page) {
          $location.search(paramName, page);
          $routeParams[paramName] = page;
          return typeof callback === "function" ? callback() : void 0;
        };
      },
      loadPage: function(currentScope, service, queryParams, callback) {
        var key, params;
        currentScope.pageSize = parseInt(currentScope.pageSize) || paginationConfig.pageSize;
        currentScope.currentPage = parseInt(currentScope.currentPage) || 1;
        params = {
          start: currentScope.pageSize * (currentScope.currentPage - 1),
          size: currentScope.pageSize
        };
        for (key in queryParams) {
          if (queryParams[key] != null) {
            params[key] = queryParams[key];
          }
        }
        return service(params, function(result, headers) {
          currentScope.totalPages = Math.ceil(headers('total') / currentScope.pageSize) || 1;
          return typeof callback === "function" ? callback(result, headers) : void 0;
        });
      }
    };
  });

  module.provider('paginationConfig', function() {
    var pageSize, showIfEmpty;
    pageSize = 20;
    showIfEmpty = false;
    this.setPageSize = (function(_this) {
      return function(value) {
        return pageSize = value;
      };
    })(this);
    this.setShowIfEmpty = (function(_this) {
      return function(value) {
        return showIfEmpty = value;
      };
    })(this);
    this.$get = function() {
      return {
        pageSize: pageSize,
        showIfEmpty: showIfEmpty
      };
    };
  });

  module.controller('PaginationCtrl', function($scope, paginationConfig) {
    $scope.$parent.$watch('currentPage * totalPages', function() {
      var c, p, t;
      c = $scope.$parent.currentPage;
      t = $scope.$parent.totalPages;
      p = $scope.p = [1];
      $scope.showPagination = t > 1 || paginationConfig.showIfEmpty;
      if (!p.contains(t)) {
        p.push(t);
      }
      if (!p.contains(c)) {
        p.push(c);
      }
      if (p.length < 5 && c - 1 > 1 && !p.contains(c - 1)) {
        p.push(c - 1);
      }
      if (p.length < 5 && c + 1 < t && !p.contains(c + 1)) {
        p.push(c + 1);
      }
      if (p.length < 5 && c - 2 > 1 && !p.contains(c - 2)) {
        p.push(c - 2);
      }
      if (p.length < 5 && c + 2 < t && !p.contains(c + 2)) {
        p.push(c + 2);
      }
      p.sort(function(a, b) {
        return a - b;
      });
      if (p[1] === 3) {
        p.splice(1, 0, 2);
      }
      if (p.length > 1 && p[1] !== undefined && p[1] !== 2) {
        p.splice(1, 0, '..');
      }
      if (p.length > 3) {
        if (p[p.length - 2] === t - 2) {
          p.splice(p.length - 1, 0, t - 1);
        }
        if (p.length > 2 && p[p.length - 2] !== t - 1) {
          p.splice(p.length - 1, 0, '..');
        }
      }
      return $scope.getClass = function(page) {
        if (page === '..') {
          return 'disabled ';
        } else {
          if (c === page) {
            return 'active';
          } else {
            return '';
          }
        }
      };
    });
    return $scope.page = function(page) {
      if (page !== '..') {
        $scope.$parent.page(page);
      }
      return false;
    };
  });

  angular.module('partials/pagination.html', []).run(function($templateCache) {
    return $templateCache.put('partials/pagination.html', "<div class=\"text-right\" ng-controller=\"PaginationCtrl\">\n    <ul class=\"pagination\" ng-show=\"p && p.length && showPagination\">\n        <li ng-repeat=\"i in p track by $index\" ng-show=\"i\" ng-class=\"getClass(i)\">\n            <a href=\"javascript:\" ng-click=\"page(i)\">{{i}}</a>\n        </li>\n    </ul>\n</div>");
  });

}).call(this);
